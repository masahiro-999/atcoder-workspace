import sys
from collections import deque, Counter, defaultdict
from itertools import product, accumulate
sys.setrecursionlimit(5 * 10 ** 5)
# from pypyjit import set_param
# set_param('max_unroll_recursion=-1')
input = lambda: sys.stdin.readline().rstrip()
ii = lambda: int(input())
mi = lambda: map(int, input().split())
li = lambda: list(mi())
inf = 2 ** 63 - 1


YES = "Yes"
NO = "No"

def solve(N: int, M: int, H: int, K: int, S: str, x: "List[int]", y: "List[int]"):


def main():
    N = ii()  # type: int
    M = ii()  # type: int
    H = ii()  # type: int
    K = ii()  # type: int
    S = input()  # type: str
    x = [int()] * (m)  # type: "List[int]"
    y = [int()] * (m)  # type: "List[int]"
    for i in range(m):
        x[i] = ii()
        y[i] = ii()
    solve(N, M, H, K, S, x, y)
    return

main()
